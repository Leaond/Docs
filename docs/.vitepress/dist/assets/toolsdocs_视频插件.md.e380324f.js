import{_ as a,o as e,c as r,Q as t}from"./chunks/framework.a7175731.js";const y=JSON.parse('{"title":"视频插件","description":"","frontmatter":{},"headers":[],"relativePath":"toolsdocs/视频插件.md","filePath":"toolsdocs/视频插件.md"}'),o={name:"toolsdocs/视频插件.md"},l=t('<h1 id="视频插件" tabindex="-1">视频插件 <a class="header-anchor" href="#视频插件" aria-label="Permalink to &quot;视频插件&quot;">​</a></h1><p>最近公司在做一些亚运会的一些相关技术支撑，主要就是针对直播进行播放、对视频进行播放、并且要求能够对视频进行截图，对图片进行展示和上传到服务器。在此记录一下具体的实现和踩过的坑。 通过广泛搜罗，目前市面上主要的视频插件有<a href="https://aplayer.js.org/#/" target="_blank" rel="noreferrer">aplayer</a>、<a href="https://v2.h5player.bytedance.com/" target="_blank" rel="noreferrer">xgplayer</a>、<a href="https://videojs.com/" target="_blank" rel="noreferrer">videojs</a>、<a href="https://www.liveqing.com/" target="_blank" rel="noreferrer">青柿player</a>这几款。这几款播放器针对web端、ios端和Andriod端的适配有不同的差异，下面将记录一下具体的实现过程。</p><h2 id="一、aplayer" tabindex="-1">一、aplayer <a class="header-anchor" href="#一、aplayer" aria-label="Permalink to &quot;一、aplayer&quot;">​</a></h2><h2 id="二、xgplayer" tabindex="-1">二、xgplayer <a class="header-anchor" href="#二、xgplayer" aria-label="Permalink to &quot;二、xgplayer&quot;">​</a></h2><h2 id="三、videojs" tabindex="-1">三、videojs <a class="header-anchor" href="#三、videojs" aria-label="Permalink to &quot;三、videojs&quot;">​</a></h2><h2 id="四、青柿player" tabindex="-1">四、青柿player <a class="header-anchor" href="#四、青柿player" aria-label="Permalink to &quot;四、青柿player&quot;">​</a></h2>',6),s=[l];function n(i,d,h,c,_,p){return e(),r("div",null,s)}const m=a(o,[["render",n]]);export{y as __pageData,m as default};
